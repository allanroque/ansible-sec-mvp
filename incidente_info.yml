---
- name: Incidentes abertos + detalhes
  hosts: localhost
  connection: local
  gather_facts: false
  collections:
    - servicenow.itsm

  vars:
    # Credenciais/instância (ideal: usar credencial no AAP)
    host: "{{ snow_instance }}"
    username: "{{ snow_username }}"
    password: "{{ snow_password }}"

    # Janelas/limiares
    window_minutes_new: 15   # janela para "novos"
    stale_hours: 24          # sem update >= Xh
    near_breach_minutes: 60  # SLA vence em <= X min

  tasks:
    # 1) Coleta única: todos os incidentes abertos (active=true)
    - name: Buscar incidentes abertos
      servicenow.itsm.incident_info:
        instance:
          host: "{{ snow_instance }}"
          username: "{{ snow_username }}"
          password: "{{ snow_password }}"
        sysparm_query: "active=true"
        sysparm_display_value: "true"
      register: abertas

    - name: Debug da variável abertas
      debug:
        msg: "{{ abertas.records | map(attribute='number') | list }}"

    # 2) Guardar dados crus e sys_ids
    - name: Guardar lista de incidentes e sys_ids
      set_fact:
        inc_all: "{{ abertas.records | default([]) }}"
        inc_sys_ids: "{{ (abertas.records | map(attribute='sys_id') | list) | default([]) }}"

    # 3.1) Quantidade total de incidentes abertos
    - name: Contagem total
      debug:
        msg: "Total de incidentes abertos encontrados: {{ inc_all | length }}"

    # 3.2) Epoch atual
    - name: Epoch atual (UTC)
      set_fact:
        now_epoch: "{{ lookup('pipe', 'date -u +%s') | int }}"

    # 4) Inicializa buckets
    - name: Inicializar buckets
      set_fact:
        inc_new: []
        inc_stale: []

    # 5) Classificar NOVOS: opened_at dentro da janela
    - name: Adicionar em NOVOS quando opened_at <= {{ window_minutes_new }} min atrás
      set_fact:
        inc_new: "{{ inc_new + [ item ] }}"
      loop: "{{ inc_all }}"
      loop_control:
        label: "{{ item.number }}"
      when:
        - item.opened_at is defined
        - item.opened_at | string | length > 0
        - >
          (
            now_epoch
            -
            (lookup('pipe', 'date -u -d \"' ~ item.opened_at ~ '\" +%s') | int)
          ) <= (window_minutes_new * 60)

    # 6) Classificar STALE: sys_updated_on >= {{ stale_hours }}h atrás
    - name: Adicionar em STALE quando sem atualização há >= {{ stale_hours }}h
      set_fact:
        inc_stale: "{{ inc_stale + [ item ] }}"
      loop: "{{ inc_all }}"
      loop_control:
        label: "{{ item.number }}"
      when:
        - item.sys_updated_on is defined
        - item.sys_updated_on | string | length > 0
        - >
          (
            now_epoch
            -
            (lookup('pipe', 'date -u -d \"' ~ item.sys_updated_on ~ '\" +%s') | int)
          ) >= (stale_hours * 3600)

    # 7) Resumo dos buckets
    - name: Contagens por bucket
      debug:
        msg:
          - "Novos ({{ window_minutes_new }} min): {{ inc_new | length }}"
          - "Stale (>= {{ stale_hours }}h): {{ inc_stale | length }}"

    - name: Listas simples (números)
      debug:
        msg:
          novos:  "{{ inc_new   | map(attribute='number') | list }}"
          stale:  "{{ inc_stale | map(attribute='number') | list }}"

    # 8) Montar mensagem pronta para Google Chat (opcional)
    - name: Montar mensagem (texto)
      set_fact:
        chat_text: |-
          *Incidentes novos ({{ inc_new | length }})*
          {{ (inc_new | map(attribute='number') | list) | default([]) }}

          *>= {{ stale_hours }}h sem atualização ({{ inc_stale | length }})*
          {{ (inc_stale | map(attribute='number') | list) | default([]) }}

    - name: Pré-visualizar mensagem
      debug:
        var: chat_text
