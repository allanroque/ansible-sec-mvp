---
- name: Changes abertas + detalhes
  hosts: localhost
  connection: local
  gather_facts: false
  collections:
    - servicenow.itsm

  vars:
    # Credenciais/instância (use credencial no AAP)
    host: "{{ snow_instance }}"
    username: "{{ snow_username }}"
    password: "{{ snow_password }}"

    # Janelas/limiares
    window_minutes_new: 15   # janela para "novas"
    stale_hours: 24          # sem update >= Xh
    near_breach_minutes: 60  # SLA vence em <= X min


  tasks:
    # 1) Coleta única: todas as changes abertas
    - name: Buscar changes abertas (phase_state=open)
      servicenow.itsm.change_request_info:
        instance: "{{ snow_instance }}"
        sysparm_query: "active=true^phase_state=open"
        sysparm_display_value: "true"
      register: abertas

    # 2) Guardar dados crus e sys_ids para referência futura
    - name: Guardar lista de changes e sys_ids
      set_fact:
        chg_all: "{{ abertas.records | default([]) }}"
        chg_sys_ids: "{{ (abertas.records | map(attribute='sys_id') | list) | default([]) }}"

    # 3) Quantidade total de changes abertas
    - name: Contagem total
      debug:
        msg: "Total de changes abertas encontradas: {{ chg_all | length }}"

    # 4) Filtrar NOVAS — opened_at nos últimos X minutos
    - name: Filtrar changes NOVAS
      set_fact:
        chg_new: >-
          {{ chg_all
             | selectattr('opened_at','defined')
             | selectattr('opened_at','match','.+')    # garante que não é vazio
             | selectattr('opened_at','regex_search',
               (ansible_date_time.iso8601 | to_datetime('%Y-%m-%dT%H:%M:%SZ')
                 - window_minutes_new * 60) | to_datetime | string ) 
             | list }}

    # 5) Filtrar VIOLADAS — última atualização há mais de X horas
    - name: Filtrar changes STALE (sem update >= {{ stale_hours }} horas)
      set_fact:
        chg_stale: >-
          {{ chg_all
             | selectattr('sys_updated_on','defined')
             | selectattr('sys_updated_on','match','.+')
             | selectattr('sys_updated_on','regex_search',
               (ansible_date_time.iso8601 | to_datetime('%Y-%m-%dT%H:%M:%SZ')
                 - stale_hours * 3600) | to_datetime | string )
             | list }}

    # 6) Filtrar PERTO DO VENCIMENTO — SLA <= X minutos
    #    (depende de já ter um campo com SLA no retorno da primeira consulta)
    - name: Filtrar changes NEAR BREACH
      set_fact:
        chg_near_breach: >-
          {{ chg_all
             | selectattr('sla_due','defined')
             | selectattr('sla_due','match','.+')
             | selectattr('sla_due','regex_search',
               (ansible_date_time.iso8601 | to_datetime('%Y-%m-%dT%H:%M:%SZ')
                 + near_breach_minutes * 60) | to_datetime | string )
             | list }}