---
- name: Buckets offline + SLA (near breach / violadas) a partir de records do vars_incident.yml
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # Limiares ajustáveis
    window_minutes_new: 15    # "novos" = abertos nos últimos X minutos
    ownerless_hours: 24       # "velhos sem owner" = abertos há >= X horas sem owner
    stale_hours: 24           # "sem atualização" = sem update há >= X horas
    near_breach_minutes: 60   # "SLA próximo" = prazo em <= X minutos
    target_ticket_number: "INC0013735"

  vars_files:
    - "vars_incident.yml"   # deve conter: records: [...]

  pre_tasks:
    - name: Validar 'records' do vars_incident.yml
      assert:
        that:
          - records is defined
          - records | type_debug == 'list'
        fail_msg: "Esperava 'records' como lista em vars_incident.yml."

  tasks:
    - name: Epoch atual (UTC)
      set_fact:
        now_epoch: "{{ lookup('pipe','date -u +%s') | int }}"

    - name: Normalizar lista de incidentes
      set_fact:
        inc_all: "{{ records | default([]) }}"

    - name: Inicializar buckets
      set_fact:
        novos_sem_owner: []
        velhos_sem_owner: []
        sem_atualizacao_sem_owner: []
        sem_atualizacao_com_owner: []
        near_breach: []
        violadas_stale: []

    # --------- 1) Novos e sem owner ---------
    - name: Classificar "Novos e sem owner"
      set_fact:
        novos_sem_owner: "{{ novos_sem_owner + [ novo_reg ] }}"
      vars:
        opened_epoch: >-
          {{
            (lookup('pipe', 'date -u -d ' ~ ( (item.opened_at | default('') ) | quote ) ~ ' +%s') | int)
              if (item.opened_at | default('') | length > 0) else 0
          }}
        delta_open_sec: "{{ now_epoch - opened_epoch }}"
        sem_owner: "{{ (item.assigned_to | default('') | trim) == '' }}"
        novo_reg:
          number: "{{ item.number }}"
          sys_id: "{{ item.sys_id }}"
          short_description: "{{ item.short_description | default('') }}"
          opened_at: "{{ item.opened_at | default('') }}"
          minutes_open: "{{ (delta_open_sec // 60) | int }}"
      loop: "{{ inc_all }}"
      loop_control:
        label: "{{ item.number | default('sem-number') }}"
      when:
        - opened_epoch > 0
        - sem_owner
        - delta_open_sec <= (window_minutes_new * 60)

    # --------- 1b) Velhos sem owner ---------
    - name: Classificar "Velhos sem owner"
      set_fact:
        velhos_sem_owner: "{{ velhos_sem_owner + [ velho_reg ] }}"
      vars:
        opened_epoch: >-
          {{
            (lookup('pipe', 'date -u -d ' ~ ( (item.opened_at | default('') ) | quote ) ~ ' +%s') | int)
              if (item.opened_at | default('') | length > 0) else 0
          }}
        delta_open_sec: "{{ now_epoch - opened_epoch }}"
        sem_owner: "{{ (item.assigned_to | default('') | trim) == '' }}"
        velho_reg:
          number: "{{ item.number }}"
          sys_id: "{{ item.sys_id }}"
          short_description: "{{ item.short_description | default('') }}"
          opened_at: "{{ item.opened_at | default('') }}"
          hours_open: "{{ (delta_open_sec // 3600) | int }}"
      loop: "{{ inc_all }}"
      loop_control:
        label: "{{ item.number }}"
      when:
        - opened_epoch > 0
        - sem_owner
        - delta_open_sec >= (ownerless_hours * 3600)

    # --------- 2) Sem atualização ≥ stale_hours (sem owner) --------
    - name: Classificar "Sem atualização (sem owner)"
      set_fact:
        sem_atualizacao_sem_owner: "{{ sem_atualizacao_sem_owner + [ stale_reg ] }}"
      vars:
        updated_epoch: >-
          {{
            (lookup('pipe','date -u -d ' ~ ( (item.sys_updated_on | default('') ) | quote ) ~ ' +%s') | int)
              if (item.sys_updated_on | default('') | length > 0) else 0
          }}
        delta_update_sec: "{{ now_epoch - updated_epoch }}"
        sem_owner: "{{ (item.assigned_to | default('') | trim) == '' }}"
        stale_reg:
          number: "{{ item.number }}"
          sys_id: "{{ item.sys_id }}"
          short_description: "{{ item.short_description | default('') }}"
          last_update: "{{ item.sys_updated_on | default('') }}"
          hours_since_update: "{{ (delta_update_sec // 3600) | int }}"
      loop: "{{ inc_all }}"
      when:
        - updated_epoch > 0
        - sem_owner
        - delta_update_sec >= (stale_hours * 3600)

    # --------- 3) Sem atualização ≥ stale_hours (com owner) --------
    - name: Classificar "Sem atualização (com owner)"
      set_fact:
        sem_atualizacao_com_owner: "{{ sem_atualizacao_com_owner + [ stale_reg ] }}"
      vars:
        updated_epoch: >-
          {{
            (lookup('pipe','date -u -d ' ~ ( (item.sys_updated_on | default('') ) | quote ) ~ ' +%s') | int)
              if (item.sys_updated_on | default('') | length > 0) else 0
          }}
        delta_update_sec: "{{ now_epoch - updated_epoch }}"
        tem_owner: "{{ (item.assigned_to | default('') | trim) != '' }}"
        stale_reg:
          number: "{{ item.number }}"
          sys_id: "{{ item.sys_id }}"
          assigned_to: "{{ item.assigned_to | default('') }}"
          short_description: "{{ item.short_description | default('') }}"
          last_update: "{{ item.sys_updated_on | default('') }}"
          hours_since_update: "{{ (delta_update_sec // 3600) | int }}"
      loop: "{{ inc_all }}"
      when:
        - updated_epoch > 0
        - tem_owner
        - delta_update_sec >= (stale_hours * 3600)

    # ======================= SLA OFFLINE =========================
    - name: SLA próximo de violar
      set_fact:
        near_breach: "{{ near_breach + [ nb_reg ] }}"
      vars:
        deadline_str: "{{ item.sla_due | default('') }}"
        due_epoch: >-
          {{
            (lookup('pipe','date -u -d ' ~ (deadline_str | quote) ~ ' +%s') | int)
              if deadline_str | length > 0 else 0
